pipeline {
  agent any 
  environment {
		// DOCKERHUB_CREDENTIALS=credentials('ram-dockerhub-login') //
		TRIVY_CRITICAL_THRES=205
		DOCK_IMG_NAME="34.67.194.116/appointme-admin-api:${BUILD_NUMBER}"
		NGINX_PROXY_URL="34.67.194.116"
		date_format = new Date().format('dd-MM-yy-HHmm')
		
	      }
    stages {
      
      stage('SonarQube analysis') {
      
        environment{
               scannerHome = tool 'sonar-scanner'
          }
	  
        steps { 
          withSonarQubeEnv('sonarqube') {
            sh "${scannerHome}/bin/sonar-scanner"     
           }
        }
     } 
      stage("Quality Gate") {
            steps {
              timeout(time: 10, unit: 'MINUTES') {
                waitForQualityGate abortPipeline: false
              }
	}
  post {
		failure {
			// mail bcc: '', body: "<br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "${currentBuild.result} CI: Project name -> ${env.JOB_NAME}", to: "deekshith.snsep@gmail.com";  //
			echo "The Quality Gate Check failed !!"
		}
		success {
		           echo "The Quality Gate Check Successful !!"
		}
		regression {
		       echo "The QGate regression step....."
		       }
		
      }   
  	


            }
          
   }
  
}
